/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotelmanagementsystem;

import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Room;
import models.RoomCategory;
import services.RoomCategoryService;
import services.RoomService;

/**
 *
 * @author gimhanrajapaksha
 */
public final class RoomViewAdmin extends javax.swing.JFrame {
    
    
    
    private final RoomService roomService;
    private final RoomCategoryService roomCategoryService;
    
    List<RoomCategory>categories;
    int selectedRoomID = -1;
    private DefaultTableModel tableModel;
    /**
     * Creates new form RoomViewAdmin
     */
    public RoomViewAdmin() {
        initComponents();
        
        roomService = new RoomService();
        roomCategoryService =new RoomCategoryService();
        loadCategories();
        tableModel = new CustomTableModel(new Object[]{"ID", "Room Number", "CategoryId","Category", "Delete"}, 0);
        roomTable.setModel(tableModel);
        loadRooms();
        
        List<String> categoryNames = loadCategoryNames();

        // Set the loaded categories in the combo box
        categoryId.setModel(new javax.swing.DefaultComboBoxModel<>(categoryNames.toArray(new String[0])));
        new ButtonColumn(roomTable, new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int row = Integer.parseInt(e.getActionCommand());
               int categoryId = (int) tableModel.getValueAt(row, 0);
               System.out.println("rooms "+categoryId)
;        
            roomService.deleteRoom(categoryId);

            
            loadRooms();
              
         }
        }, 4);
        
        roomTable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            categoryTableMouseClicked(evt);
        }
    });
        
    }
    
       void loadCategories(){
         categories=  roomCategoryService.getAllRoomCategories();
       }
    
    void loadRooms(){
          tableModel.setRowCount(0); // Clear the existing table data
        ArrayList<Room> rooms = (ArrayList<Room>) roomService.getAllRooms();

        for (Room room : rooms) {
            String catName = "";
            for(RoomCategory cat:categories){
                if(cat.getCategoryId() == room.getCategoryId()){
                    catName =cat.getCategoryName();
                    break;
                }
            }
            Object[] rowData = {
                    room.getRoomId(),
                    room.getRoomNumber(),
                    room.getCategoryId(),
                    catName,
                    "Delete"
            };
            tableModel.addRow(rowData);
        }
        roomTable.getColumnModel().getColumn(0).setMaxWidth(0);
    roomTable.getColumnModel().getColumn(0).setMinWidth(0);
    roomTable.getColumnModel().getColumn(0).setPreferredWidth(0);
    roomTable.getColumnModel().getColumn(0).setResizable(false);

    roomTable.getColumnModel().getColumn(2).setMaxWidth(0);
    roomTable.getColumnModel().getColumn(2).setMinWidth(0);
    roomTable.getColumnModel().getColumn(2).setPreferredWidth(0);
    roomTable.getColumnModel().getColumn(2).setResizable(false);
    }
    
    private List<String> loadCategoryNames() {
    List<String> categoryNames = new ArrayList<>();

    categories = roomCategoryService.getAllRoomCategories();

    for (RoomCategory cat : categories) {
        categoryNames.add(cat.getCategoryName());
    }

    return categoryNames;
}
    
       
     private void categoryTableMouseClicked(java.awt.event.MouseEvent evt) {                                           
         int row = roomTable.getSelectedRow();
            if (row != -1) {
        int catId = (int) roomTable.getValueAt(row, 0);
        String categoryName = (String) roomTable.getValueAt(row, 1);
        String description = (String) roomTable.getValueAt(row, 3);

        // Set values to the edit fields
        roomNumber.setText(categoryName);
        categoryId.setSelectedIndex(catId);

        // Save the selected category ID for future use
        selectedRoomID = catId;
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        submitBtn = new javax.swing.JButton();
        categoryId = new javax.swing.JComboBox<>();
        roomNumber = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        roomTable = new javax.swing.JTable();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 48)); // NOI18N
        jLabel1.setText("Room Details");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel2.setText("Create/Update Room");

        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        categoryId.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        roomNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomNumberActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(67, 67, 67))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(categoryId, 0, 217, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(roomNumber)
                        .addComponent(submitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(categoryId, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(roomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        roomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(roomTable);

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(278, 278, 278))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void roomNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomNumberActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        // Get the selected category name from the combo box
    String selectedCategoryName = (String) categoryId.getSelectedItem();

    // Get the room number from the text field
    String roomNumberText = roomNumber.getText();

    // Validate fields
    if (selectedCategoryName.isEmpty() || roomNumberText.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please fill in all fields.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Find the corresponding RoomCategory object based on the selected category name
    RoomCategory selectedCategory = null;
    for (RoomCategory cat : categories) {
        if (cat.getCategoryName().equals(selectedCategoryName)) {
            selectedCategory = cat;
            break;
        }
    }

    // Check if a valid category is selected
    if (selectedCategory == null) {
        JOptionPane.showMessageDialog(this, "Invalid category selected.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    
    
    // Create a new Room object
    Room newRoom = new Room();
    newRoom.setReserved(false);
    
    newRoom.setCategoryId(selectedCategory.getCategoryId());
    newRoom.setRoomNumber(roomNumberText);

    // Add the room using the RoomService
    if(selectedRoomID != -1){
        newRoom.setRoomId(selectedRoomID);
              roomService.updateRoom(newRoom);
    }else{
        newRoom.setRoomId(tableModel.getRowCount()+1);
        roomService.addRoom(newRoom);
    }

    // Reload the table data
    loadRooms();

    // Clear the input fields
    roomNumber.setText("");
    categoryId.setSelectedIndex(0);
    selectedRoomID =  -1;
    }//GEN-LAST:event_submitBtnActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        AdminDashboard adminDashboard =new AdminDashboard();
        adminDashboard.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomViewAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomViewAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomViewAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomViewAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoomViewAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JComboBox<String> categoryId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField roomNumber;
    private javax.swing.JTable roomTable;
    private javax.swing.JButton submitBtn;
    // End of variables declaration//GEN-END:variables
}
