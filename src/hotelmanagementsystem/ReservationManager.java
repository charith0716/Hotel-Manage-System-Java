/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotelmanagementsystem;

import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Customer;
import models.Reservation;
import models.Room;
import models.RoomCategory;
import services.CustomerService;
import services.ReservationService;
import services.RoomCategoryService;
import services.RoomService;

/**
 *
 * @author gimhanrajapaksha
 */
public class ReservationManager extends javax.swing.JFrame {
ReservationService reservationService = new ReservationService();
CustomerService categoryService  = new CustomerService();
List<Customer>customers;
List<Room>rooms ;
int selectedReservationID = -1;
    private DefaultTableModel tableModel;
    /**
     * Creates new form ReservationManager
     */
    public ReservationManager() {
        initComponents();
        
         List<String> categoryNames = loadCategoryNames();
        rooms= new RoomService().getAllRooms();
        // Set the loaded categories in the combo box
        customer.setModel(new javax.swing.DefaultComboBoxModel<>(categoryNames.toArray(new String[0])));
        
        tableModel = new CustomTableModel(new Object[]{"ID", "Customer Name", "Checking date","Checkout date", "Delete"}, 0);
        reservationTable.setModel(tableModel);
        loadReservations();
        new ButtonColumn(reservationTable, new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int row = Integer.parseInt(e.getActionCommand());
               int categoryId = (int) tableModel.getValueAt(row, 0);
               System.out.println("rooms "+categoryId)
;        
            reservationService.deleteReservation(categoryId);

            
            loadReservations();
              
         }
        }, 4);
        
        reservationTable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            categoryTableMouseClicked(evt);
        }
        });
        
    }
 private void categoryTableMouseClicked(java.awt.event.MouseEvent evt) {                                           
         int row = reservationTable.getSelectedRow();
            if (row != -1) {
        int catId = (int) reservationTable.getValueAt(row, 0);
        String categoryName = (String) reservationTable.getValueAt(row, 1);
        String description = (String) reservationTable.getValueAt(row, 3);

        // Set values to the edit fields
        roomNumber.setText(categoryName);
        

        
        selectedReservationID = catId;
    }
}
    
    
    void loadReservations(){
          tableModel.setRowCount(0); // Clear the existing table data
        ArrayList<Reservation> resera = (ArrayList<Reservation>) reservationService.getAllReservations();

        for (Reservation room : resera) {
            String catName = "";
            String roomName = "";
            for(Customer cat:customers){
                if(cat.getCustomerId()== room.getCustomerId()){
                    catName =cat.getFirstName();
                    break;
                }
            }
            for(Room r:rooms){
                if(room.getRoomId()== r.getRoomId()){
                    roomName =r.getRoomNumber();
                    break;
                }
            }
            Object[] rowData = {
                
                    room.getRoomId(),
                    catName,
                    room.getCheckInDate(),
                    room.getCheckOutDate(),
               
                    "Cancel"
            };
            tableModel.addRow(rowData);
        }
        reservationTable.getColumnModel().getColumn(0).setMaxWidth(0);
        reservationTable.getColumnModel().getColumn(0).setMinWidth(0);
        reservationTable.getColumnModel().getColumn(0).setPreferredWidth(0);
        reservationTable.getColumnModel().getColumn(0).setResizable(false);
    }
    
    
     void loadCategories(){
         customers=  categoryService.getAllCustomers();
       }
     
      private List<String> loadCategoryNames() {
    List<String> categoryNames = new ArrayList<>();

    customers = categoryService.getAllCustomers();

    for (Customer cat : customers) {
        categoryNames.add(cat.getFirstName());
    }

    return categoryNames;
}
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        customer = new javax.swing.JComboBox<>();
        checkoutDate = new com.toedter.calendar.JDateChooser();
        checkinDate = new com.toedter.calendar.JDateChooser();
        roomNumber = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        submitButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        reservationTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        jLabel1.setText("Reservation Manager");

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel2.setText("Create/Update Reservation");

        customer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Chackout Date");

        jLabel4.setText("Customer");

        jLabel5.setText("Checkin Date");

        jLabel6.setText("Room number");

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(submitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addComponent(jLabel4)
                        .addComponent(jLabel6)
                        .addComponent(jLabel3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(roomNumber)
                            .addComponent(checkoutDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(customer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(checkinDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addGap(13, 13, 13)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(customer, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(2, 2, 2)
                .addComponent(checkinDate, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkoutDate, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(roomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        reservationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(reservationTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AdminDashboard adminDashboard =new AdminDashboard();
        adminDashboard.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
       // Get selected customer, check-in date, check-out date, and room number
    String selectedCustomer = (String) customer.getSelectedItem();
    Date cd = checkinDate.getDate();
    Date co = checkoutDate.getDate();
    String roomNumberText = roomNumber.getText();
    int cid =1;
    // Validate input (you may want to add more validation)
    if (selectedCustomer == null || cd == null || co == null || roomNumberText.isEmpty()) {
        // Display an error message using JOptionPane
        JOptionPane.showMessageDialog(this, "Please fill in all fields", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    boolean roomFound = false;
    for(Customer customer:customers){
        if(selectedCustomer == customer.getFirstName()){
            cid = customer.getCustomerId();
            roomFound =true;
        }
    }
    if(roomFound == false){
         JOptionPane.showMessageDialog(this, "Invalid customer id","Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    
    // Convert room number to int
    int roomId = Integer.parseInt(roomNumberText);
    
    for(Room room:rooms){
        if(roomNumberText== room.getRoomNumber()){
            roomId = room.getRoomId() ;
            roomFound =true;
        }
    }
    if(roomFound == false){
         JOptionPane.showMessageDialog(this, "Invalid room","Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Create a Reservation object
    Reservation newReservation = new Reservation(1, roomId, cid, cd,co , "Standard", 0.0);

    // Create a ReservationService and add the reservation
    
    reservationService.addReservation(newReservation);

    
    System.out.println("Reservation created successfully");
    
    // Clear the form fields if needed
    clearFormFields();
    loadReservations();
    }//GEN-LAST:event_submitButtonActionPerformed
private void clearFormFields() {
    customer.setSelectedIndex(0);
    checkinDate.setDate(null);
    checkoutDate.setDate(null);
    roomNumber.setText("");
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReservationManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReservationManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReservationManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReservationManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReservationManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser checkinDate;
    private com.toedter.calendar.JDateChooser checkoutDate;
    private javax.swing.JComboBox<String> customer;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable reservationTable;
    private javax.swing.JTextField roomNumber;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables
}
